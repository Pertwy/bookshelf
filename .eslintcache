[{"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\index.js":"1","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\App.js":"2","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\components\\Navbar.js":"3","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\components\\EntryList.js":"4","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\components\\GoogleAPISearch.js":"5","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\fire.js":"6","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\components\\Login.js":"7","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\components\\EntryListTest.js":"8"},{"size":234,"mtime":1611076275504,"results":"9","hashOfConfig":"10"},{"size":852,"mtime":1611429916913,"results":"11","hashOfConfig":"10"},{"size":969,"mtime":1611429860749,"results":"12","hashOfConfig":"10"},{"size":1600,"mtime":1611426142097,"results":"13","hashOfConfig":"10"},{"size":3835,"mtime":1611422993060,"results":"14","hashOfConfig":"10"},{"size":643,"mtime":1611344934697,"results":"15","hashOfConfig":"10"},{"size":3191,"mtime":1611429085373,"results":"16","hashOfConfig":"10"},{"size":2030,"mtime":1611423128811,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3k4m93",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\index.js",[],["39","40"],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\App.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\components\\Navbar.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\components\\EntryList.js",["41"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './GoogleAPISearch.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport fire from '../fire';\r\nimport Login from \"./Login\"\r\n\r\nexport default function EntryList(){\r\n  const [books, setBooks] = useState([])    \r\n  const [cred, setCred] = useState(\"\")\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  \r\n  fire.auth().onAuthStateChanged((user) => {\r\n    return user ? setIsLoggedIn(true) : setIsLoggedIn(false);\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/books/')\r\n      .then(response => (setBooks(response.data)))\r\n  },[books])\r\n\r\n  // function deleteGoal(id){\r\n  //   axios.delete('http://localhost:5000/goals/' + id)\r\n  //     .then(response => { console.log(response.data)});\r\n\r\n  //   setGoals([...goals, goals.filter(el => el._id !== id)])\r\n  // }\r\n\r\n  function BookList() {\r\n    return (books.map(currentBook => {\r\n\r\n      const {title, author, image,  _id} = currentBook\r\n      return (\r\n\r\n        <section key={_id}>\r\n          <div className=\"card book-card\">\r\n            <img className=\"card-img-top\" src={image} alt={title}></img>\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">{title}</h4>\r\n              <p className=\"card-text\">{author}</p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )\r\n    })\r\n  )}\r\n \r\n  return (\r\n    <div>\r\n      <Login setCred={setCred}/>\r\n      <h3>Books I've read</h3>\r\n      <h3>{cred}</h3>\r\n      <div className=\"row\">\r\n        <BookList/>\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\components\\GoogleAPISearch.js",["42","43"],"import './GoogleAPISearch.css';\r\nimport axios from \"axios\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, {useState} from 'react';\r\nimport defaultImage from '../assets/default-image.png';\r\n\r\nimport fire from '../fire';\r\n\r\nexport default function GoogleAPISearch() {\r\n\r\n  const [book, setBook] = useState(\"\")\r\n  const [result, setResult] = useState([])\r\n  const [apiKey, setapiKey] = useState(\"AIzaSyDz2I7ZkOYGa4ZAkMrVE_aT7HBpapeuIII\")\r\n  \r\n  const [selectedShow, setSelectedShow] = useState(false)\r\n  const [selectedBook, setSelectedBook] = useState({\r\n    title:\"\",\r\n    author:\"\",\r\n    image:\"\"\r\n  })\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  \r\n  fire.auth().onAuthStateChanged((user) => {\r\n    return user ? setIsLoggedIn(true) : setIsLoggedIn(false);\r\n  });\r\n\r\n  const createToken = async () => {\r\n    const user = fire.auth().currentUser;\r\n    const token = user && (await user.getIdToken());\r\n    const payloadHeader = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    return payloadHeader;\r\n  }\r\n\r\n\r\n\r\n\r\n  function handleSubmit(e){\r\n    e.preventDefault()\r\n\r\n    const book = e.target.value\r\n      setBook(book.trim())\r\n\r\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+book+ \"&key=\"+apiKey+\"&maxResults=40\")\r\n      .then(data => {\r\n        setResult(data.data.items)\r\n      })\r\n  }\r\n\r\n  // function handleChange(e){\r\n  //     const book = e.target.value\r\n  //     setBook(book.trim())\r\n\r\n  function handleBook(Book){\r\n    const authorArray = Book.volumeInfo.authors\r\n    const newBook = { title: Book.volumeInfo.title, author: authorArray.join(), image: Book.volumeInfo.imageLinks.thumbnail};\r\n    setSelectedBook(newBook)\r\n    setSelectedShow(true)\r\n  }\r\n\r\n  async function handleAddBook(){\r\n\r\n    const header = await createToken();\r\n\r\n    try{\r\n    axios.post('http://localhost:5000/books/add', selectedBook, header)\r\n      .then(res => console.log(res.data));\r\n    }catch(e){\r\n      console.error(e)\r\n    }\r\n\r\n    setSelectedShow(false)\r\n    console.log(isLoggedIn)\r\n    // window.location = '/'\r\n  }\r\n\r\n  const SearchedBook = ({book}) => {\r\n    const url = book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail\r\n    return(\r\n      <div className=\"d-inline-block\" onClick={() => handleBook(book)}>\r\n        <img src={url || defaultImage} alt={book.volumeInfo.title}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n\r\n          <div className=\"col-md-6\">\r\n            <h1>Book Search - Google Books API</h1>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <input onChange={handleSubmit} type=\"text\" className=\"form-control mt-10\" placeholder=\"Search for books\" autoComplete=\"off\"/>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-danger\">Search</button>\r\n            </form>\r\n\r\n\r\n            {selectedShow && (\r\n              <section>\r\n                <div className=\"card\">\r\n                  <img className=\"card-img-top\" src={selectedBook.image} alt={selectedBook.title}></img>\r\n                  <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">{selectedBook.title}</h4>\r\n                    <p className=\"card-text\">{selectedBook.author}</p>\r\n                  </div>\r\n                </div>\r\n                <button onClick={handleAddBook} className=\"btn btn-danger\">Add Book</button>\r\n              </section>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"col-md-6\">\r\n            <div className=\"row\">\r\n            {result.map(book => (\r\n                <SearchedBook book={book}/>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n  );\r\n}","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\fire.js",[],["44","45"],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\components\\Login.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf\\bookshelf\\src\\components\\EntryListTest.js",["46"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './GoogleAPISearch.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport fire from '../fire';\r\nimport Login from \"./Login\"\r\n\r\nexport default function EntryListTest(){\r\n  const [books, setBooks] = useState([])    \r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [cred, setCred] = useState(\"\")\r\n\r\n  const signOut = () => {\r\n    fire.auth().signOut()\r\n  };\r\n\r\n\r\n  fire.auth().onAuthStateChanged((user) => {\r\n    return user ? setIsLoggedIn(true) : setIsLoggedIn(false);\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/books/')\r\n      .then(response => (setBooks(response.data)))\r\n  },[books])\r\n\r\n  // function deleteGoal(id){\r\n  //   axios.delete('http://localhost:5000/goals/' + id)\r\n  //     .then(response => { console.log(response.data)});\r\n\r\n  //   setGoals([...goals, goals.filter(el => el._id !== id)])\r\n  // }\r\n\r\n  function BookList() {\r\n    return (books.map(currentBook => {\r\n\r\n      const {title, author, image,  _id} = currentBook\r\n      return (\r\n\r\n        <section key={_id}>\r\n          <div className=\"card book-card\">\r\n            <img className=\"card-img-top\" src={image} alt={title}></img>\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">{title}</h4>\r\n              <p className=\"card-text\">{author}</p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      )\r\n    })\r\n  )}\r\n \r\n  return (\r\n    <div>\r\n      <h3>Specific person book test</h3>\r\n      {isLoggedIn && (\r\n        <div>\r\n          <h4>Logged In!!!</h4>\r\n          <h4>{cred}</h4>\r\n        </div>)}\r\n        <span onClick={signOut}>\r\n          <a href=\"#\">Sign out</a>\r\n        </span>\r\n      <Login setCred={setCred}/>\r\n\r\n      <div className=\"row\">\r\n        <BookList />\r\n        {/* <TransferButton number={4} title=\"No Transfer\" setTransferMethod={setTransferMethod} currentTransfer={transferMethod} setNoTransfer={setNoTransfer}/>  */}\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":11,"column":10,"nodeType":"53","messageId":"54","endLine":11,"endColumn":20},{"ruleId":"51","severity":1,"message":"55","line":11,"column":10,"nodeType":"53","messageId":"54","endLine":11,"endColumn":14},{"ruleId":"51","severity":1,"message":"56","line":13,"column":18,"nodeType":"53","messageId":"54","endLine":13,"endColumn":27},{"ruleId":"47","replacedBy":"57"},{"ruleId":"49","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":62,"column":11,"nodeType":"61","endLine":62,"endColumn":23},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'isLoggedIn' is assigned a value but never used.","Identifier","unusedVar","'book' is assigned a value but never used.","'setapiKey' is assigned a value but never used.",["62"],["63"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]