[{"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\index.js":"1","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\App.js":"2","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\AddList.js":"3","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\HomePage.js":"4","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\Adduser.js":"5","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\Profile.js":"6","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\Test.js":"7","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\SearchResults.js":"8","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\Members.js":"9","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\idPages\\User.js":"10","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\FollowingBookshelves.js":"11","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\idPages\\AllLists.js":"12","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\idPages\\ViewBook.js":"13","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\Navbar.js":"14","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\Footer.js":"15","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\Nav2.js":"16","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\UserDropDown.js":"17","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\TabPanel.js":"18","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\DisplayLists.js":"19","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\SignIn.js":"20","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\UserSearch.js":"21","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\Stars.js":"22","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\SignUp.js":"23","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\DisplayAllLists.js":"24","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\functions\\showNotification.js":"25","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\AddButtons\\AddFavoriteButton.js":"26","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\Following.js":"27","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\Reviews.js":"28","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\DisplayBooks.js":"29","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\MyTextField.js":"30","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\functions\\handleAddBookFromBookPage.js":"31","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\functions\\handleAddBook.js":"32","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\idPages\\ViewList.js":"33"},{"size":379,"mtime":1623106791600,"results":"34","hashOfConfig":"35"},{"size":2167,"mtime":1623361264291,"results":"36","hashOfConfig":"35"},{"size":7967,"mtime":1623363484134,"results":"37","hashOfConfig":"35"},{"size":6736,"mtime":1623826717669,"results":"38","hashOfConfig":"35"},{"size":5666,"mtime":1623106791600,"results":"39","hashOfConfig":"35"},{"size":2383,"mtime":1623827356257,"results":"40","hashOfConfig":"35"},{"size":281,"mtime":1623106791615,"results":"41","hashOfConfig":"35"},{"size":3235,"mtime":1623826905019,"results":"42","hashOfConfig":"35"},{"size":329,"mtime":1623826717607,"results":"43","hashOfConfig":"35"},{"size":4356,"mtime":1623695745465,"results":"44","hashOfConfig":"35"},{"size":2491,"mtime":1623222446053,"results":"45","hashOfConfig":"35"},{"size":879,"mtime":1623106791600,"results":"46","hashOfConfig":"35"},{"size":9445,"mtime":1623349078812,"results":"47","hashOfConfig":"35"},{"size":4152,"mtime":1623363285277,"results":"48","hashOfConfig":"35"},{"size":1901,"mtime":1623106791584,"results":"49","hashOfConfig":"35"},{"size":3433,"mtime":1623106791584,"results":"50","hashOfConfig":"35"},{"size":1121,"mtime":1623106791600,"results":"51","hashOfConfig":"35"},{"size":7829,"mtime":1623423494084,"results":"52","hashOfConfig":"35"},{"size":809,"mtime":1623424017565,"results":"53","hashOfConfig":"35"},{"size":1563,"mtime":1623106791584,"results":"54","hashOfConfig":"35"},{"size":2608,"mtime":1623170332614,"results":"55","hashOfConfig":"35"},{"size":658,"mtime":1623106791600,"results":"56","hashOfConfig":"35"},{"size":2628,"mtime":1623222051445,"results":"57","hashOfConfig":"35"},{"size":1100,"mtime":1623424017564,"results":"58","hashOfConfig":"35"},{"size":605,"mtime":1623106791600,"results":"59","hashOfConfig":"35"},{"size":2516,"mtime":1623422540758,"results":"60","hashOfConfig":"35"},{"size":2096,"mtime":1623423566863,"results":"61","hashOfConfig":"35"},{"size":1393,"mtime":1623106791584,"results":"62","hashOfConfig":"35"},{"size":1773,"mtime":1623362484253,"results":"63","hashOfConfig":"35"},{"size":554,"mtime":1623106791584,"results":"64","hashOfConfig":"35"},{"size":1665,"mtime":1623422845230,"results":"65","hashOfConfig":"35"},{"size":1840,"mtime":1623422106144,"results":"66","hashOfConfig":"35"},{"size":1594,"mtime":1623365735765,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1lkhr3g",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"70"},"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\index.js",[],["151","152"],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\App.js",["153"],"import './App.css';\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\"\r\n\r\n\r\nimport HomePage from \"./pages/HomePage\"\r\nimport Adduser from \"./pages/Adduser\"\r\nimport Profile from \"./pages/Profile\"\r\nimport AddList from \"./pages/AddList\"\r\nimport ViewBook from \"./idPages/ViewBook\"\r\nimport User from \"./idPages/User\"\r\nimport SearchResults from \"./pages/SearchResults\"\r\nimport AllLists from './idPages/AllLists';\r\nimport Nav2 from \"./components/Nav2\"\r\nimport Footer from './components/Footer';\r\nimport FollowingBookshelves from './pages/FollowingBookshelves';\r\nimport Test from './pages/Test';\r\nimport Members from \"./pages/Members\"\r\nimport Navbar from \"./components/Navbar\"\r\nimport ViewList from './idPages/ViewList';\r\n\r\naxios.defaults.withCredentials = true\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n\r\n      {/* <div className={\"nav-background\"}>\r\n        <Nav2 />\r\n      </div> */}\r\n      <div>\r\n        <Navbar />\r\n      </div>\r\n\r\n      <div className={\"mainer-container\"}>\r\n        <div className={\"main-container\"}>\r\n          <br/>\r\n            <Route path=\"/\" exact component={HomePage} />\r\n            <Route path=\"/test\" exact component={Adduser} />\r\n            <Route path=\"/lists\" component={AddList} />\r\n            <Route path=\"/profile\" component={Profile} />\r\n            <Route path=\"/book/:id\" component={ViewBook} />\r\n            <Route path=\"/list/:id\" component={ViewList} />\r\n            <Route path=\"/user/:id\" component={User} />\r\n            <Route path=\"/alllists\" component={AllLists} />\r\n            <Route path=\"/followingBookshelves\" component={FollowingBookshelves} />\r\n            <Route path=\"/signup\" component={Test} />\r\n            <Route path=\"/members\" component={Members} />\r\n\r\n\r\n            {/* <Route path=\"/searchresults/\" component={SearchResults} /> */}\r\n            <Route\r\n            path=\"/searchresults/:name\"\r\n            render={props => <SearchResults {...props} />}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div>\r\n        <Footer/>\r\n      </div>\r\n\r\n\r\n\r\n      \r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\AddList.js",["154","155","156"],"import axios from \"axios\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport defaultImage from '../assets/default-image.png';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleOutlineRoundedIcon from '@material-ui/icons/AddCircleOutlineRounded';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport showNotification from \"../functions/showNotification\"\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\nexport default function AddList() {\r\n\r\n  const [book, setBook] = useState(\"\")\r\n  const [result, setResult] = useState([])\r\n  const [apiKey, setapiKey] = useState(\"AIzaSyDz2I7ZkOYGa4ZAkMrVE_aT7HBpapeuIII\")\r\n  const [listBooks, setListBooks] = useState([])\r\n  const [description, setDescription] = useState(\"\")\r\n  const [listName, setListName] = useState(\"\")\r\n  const [listOfBookIDs, setListOfBookIDs] = useState([])\r\n  const history = useHistory();\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n      color:\"white\",\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n  function handleSetInfo(input, Book){\r\n\r\n    console.log(input)\r\n\r\n    if (!input){\r\n      let authorArray = Book.volumeInfo.authors\r\n      let authors =\"\"\r\n      if(authorArray){authors = authorArray.join()}\r\n      // else{authors=\"\"}\r\n\r\n      let newBook = {\r\n      _id: Book.id,\r\n      title: Book.volumeInfo.title, \r\n      author: authors,  \r\n      image: Book.volumeInfo.imageLinks.thumbnail,\r\n      description: Book.volumeInfo.description,\r\n      categories: Book.volumeInfo.categories, \r\n      industryIdentifiers: Book.volumeInfo.industryIdentifiers,\r\n      infoLink: Book.volumeInfo.infoLink,\r\n      language: Book.volumeInfo.language,\r\n      maturityRating: Book.volumeInfo.maturityRating,\r\n      pageCount: Book.volumeInfo.pageCount,\r\n      publishedDate: Book.volumeInfo.publishedDate,\r\n      publisher: Book.volumeInfo.publisher,\r\n      bookshelf:[], \r\n      reviews:[]}\r\n\r\n      let info = {\"book\":newBook}\r\n      axios.put('/api/users/addBookToDB', info)\r\n        .then(response => (console.log(response.data)))\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  //Search Google books API\r\n  function handleSearch(e){\r\n    e.preventDefault()\r\n\r\n    const book = e.target.value\r\n      setBook(book.trim())\r\n\r\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+book+ \"&key=\"+apiKey+\"&maxResults=40\", {withCredentials: false})\r\n    .then(data => {\r\n        setResult(data.data.items)\r\n      })\r\n  }\r\n\r\n\r\n  function handleRemoveBook(input){\r\n    setListBooks(listBooks.filter(item => item._id !== input._id))\r\n    setListOfBookIDs(listOfBookIDs.filter(item => item !== input._id))\r\n  }\r\n\r\n\r\n  //Adds a book to the temporary list\r\n  function handleAddBookToList(Book){\r\n    let authorArray = Book.volumeInfo.authors\r\n    let authors\r\n    if(authorArray){authors = authorArray.join()}\r\n    else{authors=\"\"}\r\n\r\n    const newBook = { title: Book.volumeInfo.title, author: authors, image: Book.volumeInfo.imageLinks.thumbnail, _id: Book.id};\r\n    setListBooks([...listBooks, newBook])\r\n    setListOfBookIDs([...listOfBookIDs, Book.id])\r\n\r\n    axios.get('/api/users/checkBookForLists/'+Book.id)\r\n      .then(response => (handleSetInfo(response.data, Book)))\r\n\r\n  }\r\n\r\n\r\n  //Adds a new List to the Book schema\r\n  async function handleSaveList(e){\r\n    e.preventDefault()\r\n    let info = {\"books\":listOfBookIDs, \"title\":listName, \"description\":description}\r\n    \r\n    try{\r\n    axios.put('/api/users/addListByID', info)\r\n      .then(res => { afterListHasBeenSaved(res.data)});\r\n    }catch(e){\r\n      console.error(e)\r\n    }\r\n  }\r\n\r\n\r\n  function afterListHasBeenSaved(data){\r\n    showNotification(data.note, data.note)\r\n    history.push(\"/list/\"+data.listID)\r\n  }\r\n  \r\n\r\n\r\n  //Displays the current list of selected books\r\n  const ListBookDisplay = ({book}) => {\r\n    return(\r\n      <div key={book._id} className=\"book-to-be-added-to-list d-inline-block\">\r\n        <img className=\"book-to-be-added-to-list-img\" src={book.image} alt={book.title}/>\r\n        <div className=\"buttonDiv\">\r\n          <button onClick={() => handleRemoveBook(book)}>Remove</button>\r\n        </div>  \r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n  //Displays the searched books from Google Books API\r\n  const SearchedBook = ({book}) => {\r\n\r\n    let authorArray = book.volumeInfo.authors\r\n    let authors\r\n    if(authorArray){authors = authorArray.join()}\r\n    else{authors=\"\"}\r\n\r\n    const url = book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail\r\n    return(\r\n      <>\r\n      <div className=\"list-searched-book\">\r\n        <div className=\"list-searched-book-left\">\r\n          <img className=\"list-searched-book-img\" src={url || defaultImage} alt={book.volumeInfo.title}/>\r\n        \r\n          <div className=\"ml-3 list-search-results\">\r\n            <div className={\"description\"}>\r\n              <h5 className={\"searched-title all-text\"}>{book.volumeInfo.title}</h5>\r\n              {authorArray && (\r\n              <p className={\"searched-author all-text\"}>{authors}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <IconButton onClick={() => handleAddBookToList(book)} aria-label=\"edit\" className=\"\">\r\n          <AddCircleOutlineRoundedIcon className={classes.margin}/>\r\n        </IconButton>\r\n\r\n      </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n        <div className=\"add-list-container\">\r\n          <div className=\"add-list-container-left px-2\">\r\n\r\n            <h1 className=\"all-text\">New list</h1>\r\n            <div className=\"pt-1\">\r\n              <form onSubmit={handleSaveList}>\r\n                <input \r\n                  value={listName}\r\n                  onChange={(e) => setListName(e.target.value)}    \r\n                  type=\"text\" \r\n                  className=\"form-control mt-1\" \r\n                  placeholder=\"List name\" \r\n                  autoComplete=\"off\"/>\r\n                <textarea \r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}    \r\n                  type=\"text\" \r\n                  className=\"form-control mt-1 mb-3\" \r\n                  placeholder=\"Description\" \r\n                  autoComplete=\"off\" \r\n                  name=\"Text1\" \r\n                  cols=\"40\" \r\n                  rows=\"5\"/>\r\n\r\n  \r\n                <div className=\"books-test add-list-container-hidden\">\r\n                  { listBooks.length === 0  && (\r\n                    <div className=\"start-a-list-text\">\r\n                      <p className=\"all-text pb-3\">Add a book to get started</p>\r\n                    </div>\r\n                  )}\r\n\r\n                  {listBooks.map(book => (\r\n                    <ListBookDisplay book={book}/>\r\n                  ))}\r\n                </div>\r\n\r\n                <div className=\"save-list-container my-4\">\r\n                  <input onChange={handleSearch} type=\"text\" className=\"form-control  book-search-input mr-4\" placeholder=\"Search for books\" autoComplete=\"off\"/>\r\n                  <button type=\"submit\" className=\"btn btn-danger save-list-button\">Save List</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n\r\n            \r\n            <div>\r\n              {result.map(book => (\r\n                  <SearchedBook book={book}/>\r\n                ))}\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"add-list-container-right px-4\">\r\n            <div className=\"books-test\">\r\n\r\n              { listBooks.length === 0  && (\r\n                <div className=\"start-a-list-text\">\r\n                  <p className=\"all-text pb-3\">Add a book to get started</p>\r\n                </div>\r\n              )}\r\n\r\n              {listBooks.map(book => (\r\n                <ListBookDisplay book={book}/>\r\n              ))}\r\n  \r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n         </div>\r\n      </div>\r\n  );\r\n}","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\HomePage.js",["157","158","159","160","161"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport DisplayAllLists from \"../components/DisplayAllLists\"\r\n\r\nexport default function HomePage(){\r\n  const [userData, setUserData] = useState({books:[],favorites:[],readList:[],lists:[], following:[]})\r\n  const [adminLists, setAdminLists] = useState([])\r\n  const [isLoggedIn, setIsLoggedIn] =useState(\"\")\r\n  const [adminData, setAdminData] = useState({books:[],favorites:[]})\r\n  const [friendsBookshelf, setFriendsBookshelf] = useState(true)\r\n  const [friendsLatest, setFriendsLatest] = useState(true)\r\n  \r\n    const history = useHistory();\r\n    function memberNavigate(){    \r\n      history.push(\"/members\")\r\n    }\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    axios.get('/api/users/currentUser')\r\n        .then(response => (setIsLoggedIn(response.data)))\r\n\r\n    axios.get(\"/api/lists/admin\")\r\n      .then(response => (setAdminLists(response.data)))\r\n\r\n    axios.get('/api/users/')\r\n      .then(response => (setUserData(response.data)))\r\n\r\n    axios.get('/api/users/popular')\r\n      .then(response => (setAdminData(response.data)))\r\n\r\n  },[])\r\n\r\n\r\n\r\n  function AdminLists(props) {\r\n    return (props.input.slice(0, 6).map(book => {\r\n      return (\r\n        <section className=\"the-book d-flex flex-column\" key={book._id} >\r\n          <div className=\"mt-auto py-2\">\r\n            <div className=\"\">\r\n              \r\n              <Link to={\"/book/\"+book._id}>\r\n                <img className=\"card-img-top card-img-top-bottom\" src={book.image} alt={book.title}></img>\r\n              </Link>\r\n        \r\n            </div>\r\n          </div>\r\n        </section>\r\n      )\r\n    })\r\n  )\r\n}\r\n\r\n\r\n  function FriendReadList() {\r\n    return (userData.following.slice(0, 6).map(following => {\r\n      if(following.books[0]){\r\n      return (\r\n        <section className=\"the-book d-flex flex-column\" key={following.books[following.books.length - 1]._id} >\r\n          <div className=\"mt-auto py-2\">\r\n            <div className=\"\">\r\n              \r\n              <Link to={\"/book/\"+following.books[following.books.length - 1]._id}>\r\n                <img className=\"card-img-top\" src={following.books[following.books.length - 1].image} alt={following.books[following.books.length - 1].title}></img>\r\n              </Link>\r\n\r\n              <div className=\"under-card\">\r\n                <Link to={\"/user/\"+following._id} className=\"\">\r\n                  <p className=\"under-card-text\">{following.userName}</p>\r\n                </Link>\r\n              </div>\r\n        \r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    })\r\n  )}\r\n\r\n\r\n\r\n  function FriendBookshelfList() {\r\n    return (userData.following.slice(0, 6).map(following => {\r\n      if(following.bookshelf[0]){\r\n      return (\r\n        <section className=\"the-book d-flex flex-column\" key={following.bookshelf[following.bookshelf.length - 1]._id} >\r\n          <div className=\"mt-auto py-2\">\r\n            <div className=\"\">\r\n              \r\n              <Link to={\"/book/\"+following.bookshelf[following.bookshelf.length - 1]._id}>\r\n                <img className=\"card-img-top\" src={following.bookshelf[following.bookshelf.length - 1].image} alt={following.bookshelf[following.bookshelf.length - 1].title}></img>\r\n              </Link>\r\n\r\n              <div className=\"under-card\">\r\n                <Link to={\"/user/\"+following._id} className=\"\">\r\n                  <p className=\"under-card-text\">{following.userName}</p>\r\n                </Link>\r\n              </div>\r\n        \r\n            </div>\r\n          </div>\r\n        </section>\r\n      )}\r\n    })\r\n  )}\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"pb-4\">\r\n\r\n        <div className={\"py-4 home-page-heading-div\"}>\r\n\r\n          <div className={\"\"}>\r\n            <h2 className={\"all-text home-page-heading\"}>The social network for book lovers</h2>\r\n            <div className={\"col\"}>\r\n              <p className={\"all-text home-page-bullets\"}>View what's on your friends bookshelves</p>\r\n              <p className={\"all-text home-page-bullets\"}>Track books you've read</p>\r\n              <p className={\"all-text home-page-bullets\"}>Save the books you haven't got around to reading</p>\r\n              <p className={\"all-text home-page-bullets\"}>Let friends know what's good</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"book-row-section\">\r\n          <div className=\"book-row-div\">\r\n            <h2 className=\"book-row-title\">POPULAR THIS WEEK</h2>\r\n            \r\n          </div>\r\n          <div className=\"mx-1 row book-row\">\r\n            <AdminLists input={adminData.favorites}/>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"book-row-section\">\r\n          <div className=\"book-row-div\">\r\n            <h2 className=\"book-row-title\">STAFF PICKS</h2>\r\n          </div>\r\n          <div className=\"mx-1 row book-row\">\r\n            <AdminLists input={adminData.books}/>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        {isLoggedIn && (userData.following.length > 0) && (\r\n          <>\r\n\r\n        {friendsLatest && (\r\n        <div className=\"book-row-section\">\r\n          <div className=\"book-row-div\">\r\n            <h2 className=\"book-row-title\">LATEST FROM FRIENDS</h2>\r\n          </div>\r\n          <div className=\"mx-1 row book-row\">\r\n            <FriendReadList type=\"readlist\"/>\r\n          </div>\r\n        </div>)}\r\n\r\n        {friendsBookshelf && (\r\n        <div className=\"book-row-section\">\r\n          <div className=\"mx-1 book-row-div row space-between\">\r\n            <h2 className=\"book-row-title\">BOOKSHELVES</h2>\r\n            <Link to={\"/followingBookshelves\"}><h2 className=\"book-row-title\">VIEW ALL</h2></Link>\r\n          </div>\r\n\r\n          <div className=\"mx-1 row\">\r\n            <FriendBookshelfList/>\r\n          </div>\r\n        </div>)}\r\n\r\n        </>)}\r\n\r\n\r\n\r\n        {isLoggedIn && (userData.following.length == 0) && (\r\n        <>\r\n          <div className=\" mt-5 home-page-heading-div\">\r\n            <h2 className=\" all-text\">Add friends to see what they've been reading</h2>\r\n            <div onClick={()=>memberNavigate()} className=\"search-members-button\">\r\n              <h5 className=\"all-text py-2\">Search members</h5>\r\n            </div>\r\n          </div>\r\n        </>)}\r\n        \r\n\r\n\r\n        <div className=\"book-row-section\">\r\n          <div className=\"mb-3 book-row-div\">\r\n            <h2 className=\"book-row-title\">POPULAR LISTS</h2>\r\n          </div>\r\n          \r\n          <div className=\"mx-1 row book-row\">\r\n            <DisplayAllLists lists={adminLists}/>\r\n          </div>\r\n        </div>\r\n\r\n        \r\n    </div>\r\n  )\r\n}","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\Adduser.js",["162","163","164"],"import React, { useState} from 'react';\r\nimport axios from 'axios';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport \"./addUser.css\"\r\n\r\n\r\nexport default function Adduser(){\r\n  const [email, setEmail] = useState(\"\");\r\n  const [bio, setBio] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [givenName, setGivenName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [secondPassword, setSecondPassword] = useState(\"\")\r\n  \r\n\r\n  function newUserInDB(){\r\n    let newUser = {\r\n      \"email\":email, \"userName\":userName, \"givenName\":givenName, \"surname\":surname, \"password\":password, \"bio\":bio\r\n    }\r\n\r\n    try{\r\n      axios.post('/api/users/add', newUser )\r\n        .then(res => console.log(res.data));\r\n      }catch(e){\r\n        console.error(e)\r\n      }\r\n  }\r\n\r\n  function handleLogin(){\r\n\r\n    let user = {\"email\":email, \"password\":password}\r\n\r\n    try{\r\n      axios.post('/api/auth/', user, {withCredentials: true, credentials: 'include'})\r\n        .then(res => console.log(res.data));\r\n      }catch(e){\r\n        console.error(e)\r\n      }\r\n  }\r\n\r\n\r\n\r\n  function handleSignUp(e) {\r\n    e.preventDefault();\r\n    newUserInDB()      \r\n  } \r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        margin:\"10px\",\r\n\r\n      },\r\n    },\r\n    input:{\r\n      '& > *': {\r\n      display:\"block\",\r\n      color: \"#cacbcc\", \r\n      width:\"90%\",\r\n      marginTop:\"10px\",\r\n      marginLeft:\"5%\",\r\n      height:\"50px\",  \r\n      }\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  \r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <div className=\" container \">\r\n\r\n        <div className=\"row justify-content-center\">\r\n          \r\n        \r\n        {/* classes.root,  */}\r\n        <div className={\" col-sm-12 col-md-6\"}>\r\n        <div className={\" login-background background-colour\"}>\r\n        <form  noValidate autoComplete=\"off\" onSubmit={handleSignUp}>\r\n            <div className={\"text-align\"}>\r\n            <h3 className=\"sign-text\">Sign Into Your Account  </h3>  \r\n            </div>\r\n            <TextField  variant=\"outlined\" fullWidth className={classes.input} onChange={({ target }) =>     \r\n                  setEmail(target.value)} label=\"Email\" />\r\n\r\n            <TextField variant=\"outlined\" fullWidth className={classes.input} onChange={({ target }) =>     \r\n                  setPassword(target.value)} label=\"Password\" />\r\n\r\n            \r\n            \r\n            <div className={\"text-align\"}>\r\n              <Button className=\"mt-2\" onClick={() => handleLogin()} variant=\"outlined\">\r\n                Log in\r\n              </Button>\r\n            </div>\r\n\r\n\r\n        </form>\r\n        </div>\r\n        </div>\r\n\r\n\r\n        <div className={\" col-sm-12 col-md-6\"}>\r\n        <div className={\"background-colour login-background \"}>\r\n        <form  noValidate autoComplete=\"off\" onSubmit={handleSignUp}>\r\n            <div className={\"text-align\"}>\r\n              <h3 className=\"sign-text\">Create Your Account</h3>  \r\n            </div>\r\n            <TextField  variant=\"outlined\" fullWidth className={classes.input} onChange={({ target }) =>     \r\n                  setGivenName(target.value)} label=\"Given Name\" />\r\n\r\n            <TextField  variant=\"outlined\" fullWidth className={classes.input} onChange={({ target }) =>     \r\n                  setSurname(target.value)} label=\"Surname\" />\r\n\r\n            <TextField variant=\"outlined\" fullWidth className={classes.input} onChange={({ target }) =>     \r\n                  setUserName(target.value)} label=\"User Name\" />\r\n\r\n            <TextField variant=\"outlined\" fullWidth className={classes.input} onChange={({ target }) =>     \r\n                  setEmail(target.value)} label=\"Email\" />\r\n\r\n            <TextField variant=\"outlined\" fullWidth className={classes.input} onChange={({ target }) =>     \r\n                  setPassword(target.value)} label=\"Password\" />\r\n\r\n            <TextField variant=\"outlined\" fullWidth className={classes.input} onChange={({ target }) =>     \r\n                  setSecondPassword(target.value)} label=\"Re-enter Password\" />\r\n\r\n            <TextField \r\n              variant=\"outlined\" \r\n              fullWidth \r\n              multiline \r\n              id=\"outlined-multiline-static\"\r\n              rows={4} \r\n              className={classes.input} \r\n              variant=\"outlined\" \r\n              onChange={({ target }) =>     \r\n                  setBio(target.value)} \r\n              label=\"Bio\" />\r\n\r\n            \r\n\r\n            {/* <TextField variant=\"outlined\" fullWidth className={classes.input} onChange={({ target }) =>     \r\n                  setGivenName(target.value)} label=\"Given Name\" />\r\n            <TextField variant=\"outlined\" fullWidth className={classes.input} onChange={({ target }) =>     \r\n                  setSurname(target.value)} label=\"Surname\" /> */}\r\n\r\n            {/* <TextField variant=\"outlined\" fullWidth className={classes.input} onChange={({ target }) =>     \r\n                  setPronoun(target.value)} label=\"Pronoun\" /> */}\r\n            {/* <button type=\"submit\">\r\n                Sign up\r\n            </button> */}\r\n            <div className={\"text-align\"}>\r\n              <Button className=\"mt-2\" type=\"submit\" variant=\"outlined\">\r\n                Sign Up\r\n              </Button>\r\n            </div>\r\n        </form>\r\n        </div >\r\n        </div> \r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\Profile.js",["165"],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\Test.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\SearchResults.js",["166","167","168","169"],"import axios from \"axios\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport defaultImage from '../assets/default-image.png';\r\nimport AdditionButton from \"../components/AddButtons/AddFavoriteButton\"\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nexport default function SearchResults(props) {\r\n\r\n  const [result, setResult] = useState([])\r\n  const [apiKey, setapiKey] = useState(\"AIzaSyDz2I7ZkOYGa4ZAkMrVE_aT7HBpapeuIII\")\r\n  const [currentUser, setCurrentUser] = useState(\"\")\r\n  const [isLoggedIn, setIsLoggedIn] =useState(\"\")\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/users/currentUser')\r\n          .then(response => (setIsLoggedIn(response.data)))\r\n    \r\n    axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+props.location.pathname.replace(\"/searchresults/\", \"\")+ \"&key=\"+apiKey+\"&maxResults=40\", {withCredentials: false})\r\n      .then(data => {\r\n        setResult(data.data.items)\r\n        //console.log(data.data.items)\r\n      })\r\n    },[])\r\n\r\n\r\n \r\n  const SearchedBook = ({book}) => {\r\n    const url = book.volumeInfo.imageLinks && book.volumeInfo.imageLinks.thumbnail\r\n    const authorArray = book.volumeInfo.authors\r\n    \r\n    return(\r\n      <div className=\"row space-between mb-4 searched-row pb-2 shadow-lg\">\r\n        <div className=\"search-results-image\">\r\n          <Link   to={\r\n                  {     \r\n                    pathname: '/book/'+ book.id,\r\n                    state: book.volumeInfo\r\n                    }\r\n              }>               \r\n            <img className=\"search-image \" src={url || defaultImage} alt={book.volumeInfo.title}/>\r\n            </Link>\r\n        </div>\r\n\r\n        <div className=\"ml-3 search-results-text\">\r\n          <div className={\"description\"}>\r\n            <h5 className={\"searched-title all-text\"}>{book.volumeInfo.title}</h5>\r\n            {authorArray && (\r\n            <p className={\"searched-author all-text\"}>{authorArray.join()}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n\r\n\r\n        {isLoggedIn &&(<>\r\n        <div className=\"search-results-buttons\">\r\n            <div className=\"testDiv\">\r\n            <AdditionButton  type=\"favorite\" currentUser={currentUser} book={book} page=\"SearchResults\"/>\r\n            <AdditionButton  type=\"read\" currentUser={currentUser} book={book} page=\"SearchResults\"/>\r\n            <AdditionButton  type=\"readlist\" currentUser={currentUser} book={book} page=\"SearchResults\"/>\r\n            <AdditionButton  type=\"bookshelf\" currentUser={currentUser} book={book} page=\"SearchResults\"/>\r\n            </div>\r\n        </div> </>)}\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <div className=\"container center-all\">\r\n\r\n          <div className=\"result-width center-all mb-3\" >\r\n            <div className=\"space-between\">\r\n              <p className={\"all-text\"}>SHOWING RESULTS FOR {props.location.pathname.replace(\"/searchresults/\", \"\")}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"result-width center-all\"> \r\n            {result.map(book => (\r\n                <SearchedBook book={book}/>\r\n              ))}\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\Members.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\idPages\\User.js",["170","171","172"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"react-alice-carousel/lib/alice-carousel.css\"\r\nimport TabPanel from \"../components/TabPanel\"\r\nimport showNotification from '../functions/showNotification';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function User(props){\r\n  const [myUserData, setMyUserData] = useState({photo:\"\", books:[],favorites:[],readList:[],lists:[], following:[], followers:[], bookshelf:[]})\r\n  const [userData, setUserData] = useState({photo:\"\", givenName:\"\", surname:\"\", books:[],favorites:[],readList:[],lists:[], following:[], followers:[], bookshelf:[]})\r\n  const [update, setUpdate] = useState(0)\r\n  const [owner, setOwner] = useState(false)\r\n  const [isLoggedIn, setIsLoggedIn] =useState(\"\")\r\n\r\n   \r\n  useEffect(() => {\r\n\r\n      axios.get('/api/users/currentUser')\r\n          .then(response => (setIsLoggedIn(response.data)))\r\n\r\n      axios.get(\"/api/users/\"+props.location.pathname.replace(\"/user/\", \"\"))\r\n      .then(response => (setUserData(response.data)))\r\n\r\n      axios.get('/api/users/')\r\n        .then(response => (setMyUserData(response.data)))\r\n\r\n  },[update, userData])\r\n \r\n\r\n\r\n  \r\n  function handleFollow(){\r\n    let info = {\"follow\":props.location.pathname.replace(\"/user/\", \"\")}\r\n    axios.post('/api/users/follow',info)\r\n      .then(res => { showNotification(res.data, res.data)});\r\n}\r\n\r\n  function handleUnfollow(){\r\n    let info = {\"unfollow\":props.location.pathname.replace(\"/user/\", \"\")}\r\n    axios.post('/api/users/unfollow',info)\r\n      .then(res => { showNotification(res.data, res.data)});\r\n  }\r\n\r\n\r\n\r\n  let doesFollow = myUserData.following.some((follower) => {\r\n    return follower._id === props.location.pathname.replace(\"/user/\", \"\")\r\n  })\r\n  let followButton\r\n  if(!doesFollow){\r\n    followButton = <><Button  style={{\r\n      borderRadius: 5,\r\n      borderColor: \"#a9aeb3\",\r\n      backgroundColor: \"#a9aeb3\",\r\n      color: \"black\",\r\n      padding: \"3px 3px\",\r\n      fontSize: \"8px\"\r\n      }}\r\n      onClick={()=>handleFollow()}>Follow</Button> </>\r\n  }else {\r\n    followButton = <><Button  style={{\r\n      borderRadius: 5,\r\n      borderColor: \"#a9aeb3\",\r\n      backgroundColor: \"#a9aeb3\",\r\n      color: \"black\",\r\n      padding: \"3px 3px\",\r\n      fontSize: \"8px\"\r\n      }}\r\n      onClick={()=>handleUnfollow()}>Unfollow</Button> </>\r\n  }\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"shadow-lg px-4 pb-4\">\r\n        {/* <UserDropDown setEmail={setCurrentUser}/> */}\r\n  \r\n            <div className=\"pb-2 container-fluid row\">\r\n          \r\n                <div className=\"col-sm-10 col-md-8\">\r\n                  <div className=\"pl-3 row\">\r\n                    <h4 className=\"pr-2 all-text name\">{userData.givenName} {userData.surname}</h4> \r\n\r\n                    {isLoggedIn &&(\r\n                      <>\r\n                      {followButton}\r\n                      </>\r\n                    )}\r\n\r\n                  </div>\r\n                  <p className=\"all-text bio\">{userData.bio}</p>\r\n                </div>\r\n      \r\n                <div className=\"col-sm-12 col-md-4 stats\">\r\n                  <div className=\"row\">\r\n                    <div className=\"stats-div\">\r\n                      <p className=\"all-text stats-num\">{userData.bookshelf.length}</p>\r\n                      <p className=\"all-text stats-title\">BOOKSHELF</p>\r\n                    </div>\r\n\r\n                    <div className=\"stats-div\">\r\n                      <p className=\"all-text stats-num\">{userData.books.length}</p>\r\n                      <p className=\"all-text stats-title\">READ</p>\r\n                    </div>\r\n\r\n                    <div className=\"stats-div\">\r\n                      <p className=\"all-text stats-num\">{userData.followers.length}</p>\r\n                      <p className=\"all-text stats-title\">FOLLOWERS</p>\r\n                    </div>\r\n                \r\n\r\n                    <div className=\"stats-div\">\r\n                      <p className=\"all-text stats-num\">{userData.following.length}</p>\r\n                      <p className=\"all-text stats-title\">FOLLOWING</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n  \r\n          <TabPanel setUserData={setUserData} userData={userData} owner={owner}/>\r\n        \r\n  \r\n      </div>\r\n    )\r\n  }","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\pages\\FollowingBookshelves.js",["173"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\nexport default function FollowingBookshelves(){\r\n  const [userData, setUserData] = useState({books:[],favorites:[],readList:[],lists:[], following:[]})\r\n  const [isLoggedIn, setIsLoggedIn] =useState(\"\")\r\n\r\n    \r\n  useEffect(() => {\r\n    axios.get('/api/users/currentUser')\r\n          .then(response => (setIsLoggedIn(response.data)))\r\n\r\n\r\n    axios.get('/api/users/')\r\n      .then(response => (setUserData(response.data)))\r\n      //.then(response => (console.log(response.data)))\r\n      \r\n  },[])\r\n\r\n\r\n\r\n\r\n  function FriendBookshelfList() {\r\n    return (userData.following.map(following => {\r\n      console.log(following)\r\n\r\n        if(following.bookshelf[0]){\r\n            \r\n        return (\r\n           <div className=\"full-width\">\r\n                <div className=\"book-row-div row space-between mb-3\">\r\n                    <Link to={\"/user/\"+following._id} className=\"\"><p className=\"book-row-title\">{following.userName}</p></Link>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                {following.bookshelf.map(book => {\r\n                    return(\r\n\r\n                        <section className=\"d-flex flex-column\" key={book._id} >\r\n                            <div className=\"mt-auto p-2\">\r\n   \r\n                                <Link to={\"/book/\"+book._id}>\r\n                                    <img className=\"card-img-top card-img-top-bottom\" src={book.image} alt={book.title}></img>\r\n                                </Link>\r\n\r\n                            </div>\r\n                        </section>\r\n                )})}\r\n                </div>\r\n\r\n                <br></br>\r\n\r\n          </div>\r\n        )\r\n      \r\n      }\r\n    })\r\n  )}\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"pb-4\">\r\n      {!isLoggedIn &&(<>\r\n        <Link to={\"/signup\"} className=\"\">\r\n          <h4 className=\"all-text\">Please log in or create an account to view friends bookshelves</h4>\r\n        </Link>\r\n      </>)}\r\n\r\n      {isLoggedIn &&(<>\r\n        <div className=\" center-all\">\r\n          <h4 className=\"mt-5 all-text profile-title-text\">View the libraries the people you follow have created</h4>\r\n        </div>\r\n\r\n         <div className=\"book-row-section\">\r\n          <div className=\"row book-row\">\r\n            <FriendBookshelfList/>\r\n          </div>\r\n        </div>\r\n      </>)}\r\n    </div>\r\n  )\r\n}","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\idPages\\AllLists.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\idPages\\ViewBook.js",["174","175"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport HalfRating from \"../components/Stars\"\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AdditionButton from \"../components/AddButtons/AddFavoriteButton\"\r\nimport showNotification from \"../functions/showNotification\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Link, useLocation} from \"react-router-dom\";\r\n\r\nexport default function ViewBook(props){\r\n  const [book, setBook] = useState({ bookshelf:[], reviews:[]})  \r\n  const [currentUser, setCurrentUser] = useState(\"john@gmail.com\")\r\n  const [userData, setUserData] = useState({photo:\"\", books:[],favorites:[],readList:[],lists:[], following:[], followers:[], bookshelf:[]})\r\n  const [review, setReview] = useState(\"\")\r\n  const [rating, setRating] = useState(0);\r\n  const [isLoggedIn, setIsLoggedIn] =useState(\"\")\r\n\r\n\r\n  let location = useLocation()\r\n\r\n\r\n\r\n  function handleAddReview(e){\r\n    e.preventDefault();\r\n    let info = {\"_id\":props.location.pathname.replace(\"/book/\", \"\"), \"review\":review, \"rating\":rating}\r\n\r\n    axios.post('/api/users/addreview',info)\r\n      .then(res => { showNotification(res.data, res.data)})\r\n\r\n    let testBook = book\r\n    testBook.reviews.push({\"review\":review, \"authorName\":isLoggedIn.userName , \"author\":{\"_id\":isLoggedIn._id}})\r\n    setBook(testBook)\r\n    setReview(\"\")\r\n    setRating(0)\r\n    \r\n  }\r\n      \r\n\r\n  useEffect(() => {\r\n\r\n    axios.get('/api/users/checkBook/'+props.location.pathname.replace(\"/book/\", \"\"))\r\n          .then(response => (handleSetInfo(response.data)))\r\n          //.then(response => (console.log(response.data)))\r\n\r\n    axios.get('/api/users/currentUser')\r\n          .then(response => (setIsLoggedIn(response.data)))\r\n\r\n    axios.get('/api/users/')\r\n      .then(response => (setUserData(response.data)))\r\n\r\n  },[])\r\n\r\n\r\n  function handleSetInfo(input){\r\n\r\n    if (input){\r\n      setBook(input)\r\n    }\r\n    else {\r\n      let authorArray = location.state.authors\r\n\r\n      let newBook = {\r\n      _id: props.location.pathname.replace(\"/book/\", \"\"),\r\n      title: location.state.title, \r\n      author: authorArray.join(),  \r\n      image: location.state.imageLinks.thumbnail,\r\n      description: location.state.description,\r\n      categories: location.state.categories, \r\n      industryIdentifiers: location.state.industryIdentifiers,\r\n      infoLink: location.state.infoLink,\r\n      language: location.state.language,\r\n      maturityRating: location.state.maturityRating,\r\n      pageCount: location.state.pageCount,\r\n      publishedDate: location.state.publishedDate,\r\n      publisher: location.state.publisher,\r\n      bookshelf:[], \r\n      reviews:[]}\r\n      setBook(newBook)\r\n\r\n      let info = {\"book\":newBook}\r\n\r\n      axios.put('/api/users/addBookToDB', info)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  function Reviews(){\r\n    return (book.reviews.map(review => {\r\n      return(\r\n      <div className=\"pb-2\">\r\n        <Link to={\"/user/\"+review.author._id}>\r\n          <h6 className=\"all-text review-name\">{review.authorName}</h6>\r\n        </Link>\r\n        \r\n        <p className=\"all-text review-text\">{review.review}</p>\r\n      </div>\r\n    )\r\n    }))\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n    function InfoBox(props){\r\n      if(props.info){\r\n        return(\r\n        <div className=\"col-sm-2\">\r\n          <div className=\"p1 infoBox text-center\">\r\n            <p className=\"infoText all-text\">{props.title}</p>\r\n            <p className=\"infoText all-text\">{props.info}</p>\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n      else{\r\n        return(<></>)\r\n      }\r\n    }\r\n\r\n\r\n    function ISBNInfoBox(props){\r\n      if(props.info){\r\n        return(\r\n        <div className=\"col-sm-2\">\r\n          <div className=\"p1 infoBox text-center\">\r\n            {props.info.map( info =>(\r\n              <>\r\n                  <p className=\"infoText all-text\">{info.type}</p>\r\n                  <p className=\"infoText all-text\">{info.identifier}</p>\r\n                  </>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        )\r\n      }\r\n      else{\r\n        return(<></>)\r\n      }\r\n    }\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n      root: {\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n          \r\n  \r\n        },\r\n      },\r\n      input:{\r\n        '& > *': {\r\n        display:\"block\",\r\n        color: \"#cacbcc\", \r\n        width:\"100%\",\r\n        marginTop:\"10px\",\r\n        // height:\"50px\",  \r\n        }\r\n      }\r\n    }));\r\n  \r\n    const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n  let numberOfFollowingBookshelves = 0\r\n  var i;\r\n\r\n  for (i = 0; i < userData.following.length; i++) {\r\n\r\n    let check = userData.following[i].bookshelf.some((book) => {\r\n      return book._id === props.location.pathname.replace(\"/book/\", \"\")\r\n    }) \r\n    if(check){numberOfFollowingBookshelves+=1}\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"container shadow-lg p-4 mb-4 \">\r\n\r\n      <div className=\"content\">\r\n        <div className=\"row\">\r\n          <div className = \"col-xs-6 col-sm-6 col-md-3\">\r\n            <img className=\"book-image\" src={book.image} alt={book.title}></img>\r\n            {/* <img className=\"book-image\" src=\"https://d1w7fb2mkkr3kw.cloudfront.net/assets/images/book/lrg/9781/8695/9781869539078.jpg\" alt={book.title}></img> */}\r\n          </div>\r\n\r\n          <div className = \"col-xs-6 col-sm-9 col-md-9\">\r\n            <div className=\"row\">\r\n              <div className=\"pl-3 col-sm-6\">\r\n                <h2 className=\"all-text\">{book.title}</h2>\r\n                <h5 className=\"mt-3 all-text\">By {book.author}</h5>\r\n              </div>\r\n\r\n              <div className=\"pt-1 col-sm-6\">\r\n\r\n                {isLoggedIn &&(<>\r\n                  <p className=\"all-text\" >On {numberOfFollowingBookshelves} friend's bookshelves</p>\r\n                </>)}\r\n\r\n                <p className=\"all-text \">On {book.bookshelf.length} bookshelves</p>\r\n              </div>\r\n            </div>\r\n\r\n            {book.description  &&(\r\n              <div className=\"book-description-box\">\r\n                <p className=\"mt-3 all-text book-description summary\" >{book.description}</p>\r\n              </div>)}\r\n            \r\n          </div>\r\n        </div>\r\n\r\n        {isLoggedIn &&(<>\r\n        <span className=\"row pl-2\">\r\n          <div>\r\n            <AdditionButton type=\"favorite\" currentUser={currentUser} book={book} page=\"ViewBook\"/>\r\n            <AdditionButton type=\"read\" currentUser={currentUser} book={book} page=\"ViewBook\"/>\r\n          </div>\r\n          <div>\r\n            <AdditionButton type=\"readlist\" currentUser={currentUser} book={book} page=\"ViewBook\"/>\r\n            <AdditionButton type=\"bookshelf\" currentUser={currentUser} book={book} page=\"ViewBook\"/>\r\n          </div>\r\n        </span></>)}\r\n\r\n        {/* {book.pageCount || book.language || book.publishedDate || book.publisher || book.maturityRating || book.industryIdentifiers  &&(\r\n        <> */}\r\n        <h4 className=\"all-text avatar-heading pt-4\"> ADDITIONAL INFO</h4>\r\n        <div className=\" container mt-2 mb-3\">\r\n          <div className=\"row mx-auto \">\r\n            <InfoBox title=\"PAGE COUNT\" info={book.pageCount}/>\r\n            <InfoBox title=\"LANGUAGE\" info={book.language}/>\r\n            <InfoBox title=\"DATE PUBLISHED\" info={book.publishedDate}/>\r\n            <InfoBox title=\"PUBLISHER\" info={book.publisher}/>\r\n            <InfoBox title=\"MATURITY\" info={book.maturityRating}/>\r\n            <ISBNInfoBox title=\"ISBN\" info={book.industryIdentifiers}/>\r\n          </div>\r\n        </div>\r\n        {/* </>)} */}\r\n\r\n        {/* <h4>Number of times read {book.numberOfTimesRead}</h4>\r\n        <h4>Number of times favorited {book.numberOfTimesFavorited}</h4>\r\n        <h4>Read Lists </h4>\r\n        <h4>Lists </h4> */}\r\n\r\n        \r\n\r\n\r\n        \r\n          <div>\r\n\r\n            <h4 className=\"all-text avatar-heading\"> REVIEWS</h4>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-6\">\r\n                {book.reviews.length > 0 &&(\r\n                <Reviews/>)}\r\n\r\n                {book.reviews.length === 0 && isLoggedIn &&(\r\n                <h5 className=\"all-text\">Be the first to review!</h5>\r\n                )}\r\n              </div>\r\n\r\n\r\n              {isLoggedIn &&(<>\r\n              <div className=\"col-sm-6\">\r\n                <form onSubmit={handleAddReview}>\r\n                  {/* <label>Add a review</label> */}\r\n                  <TextField\r\n                  className={classes.input}\r\n                  id=\"outlined-multiline-static\"\r\n                  label=\"Add a review\"\r\n                  multiline\r\n                  rows={4}\r\n                  defaultValue=\"\"\r\n                  variant=\"outlined\"\r\n                  fullwidth\r\n                  onChange={({ target }) =>     \r\n                      setReview(target.value)}\r\n                />\r\n                  <HalfRating setRating={setRating}/>\r\n                  <Button type=\"submit\"\r\n                  style={{\r\n                    borderRadius: 5,\r\n                    borderColor: \"#a9aeb3\",\r\n                    backgroundColor: \"#a9aeb3\",\r\n                    color: \"black\",\r\n                    padding: \"7px 7px\",\r\n                    fontSize: \"12px\"\r\n                    }}>Submit</Button>\r\n                </form>\r\n              </div>\r\n              </>)}\r\n            </div>\r\n\r\n          </div>\r\n        \r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\Navbar.js",["176"],"import React, {useState, useEffect} from \"react\";\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Navbar.css\"\r\nimport {  Form, Button } from 'react-bootstrap';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport default function Navbar() {\r\n\r\n  const [search, setSearch] = useState(\"cats\")\r\n  const history = useHistory();\r\n  const [isLoggedIn, setIsLoggedIn] =useState(\"\")\r\n\r\n  useEffect(() => {\r\n\r\n      axios.get('/api/users/currentUser')\r\n        .then(response => (setIsLoggedIn(response.data)))\r\n        //.then(response => (setUserData(response.data)))\r\n\r\n  },[])\r\n\r\n  function logout(){\r\n    axios.get('/api/auth/logout_get')\r\n    .then(navigateHome())\r\n \r\n\r\n  }\r\n\r\n  function navigateHome(){    \r\n    history.push(\"/\")\r\n    window.location.reload();\r\n  }\r\n  function navigateMembers(){    \r\n    history.push(\"/members\")\r\n  }\r\n  function navigateProfile(){    \r\n    history.push(\"/profile\")\r\n  }\r\n  function navigateSignIn(){    \r\n    history.push(\"/signup\")\r\n  }\r\n\r\n\r\n  function handleSearch(){    \r\n    history.push(\"/searchresults/\"+search)\r\n  }\r\n\r\n\r\n\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    input:{\r\n      '& > *': {\r\n \r\n      color: \"#e4e5e6\",   \r\n      width: \"100px\",\r\n      paddingLeft: \"10px\",\r\n      paddingRight: \"10px\", \r\n      marginLeft: \"10px\",\r\n      marginRight: \"10px\", \r\n      }\r\n    }\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className= \"container-fullwidth\">\r\n     \r\n      <nav>\r\n\r\n        \r\n          <input type=\"checkbox\" id=\"check\"/>\r\n          <label for=\"check\" class=\"checkbtn-menu flot-right\">\r\n            <i className=\"\">MENU</i>\r\n          </label>\r\n\r\n          <span>\r\n            <h4 className=\"all-text home-btn\" onClick={()=>navigateHome()}>Bookshelf</h4>\r\n          </span>\r\n       \r\n          {/* <input type=\"checkbox\" id=\"check\"/>\r\n          <label for=\"check\" class=\"checkbtn\">\r\n            <i onClick={()=>navigateHome()}>Bookshelf</i>\r\n          </label> */}\r\n       \r\n       \r\n\r\n        <ul className=\"nav-drop-down\">\r\n\r\n                {!isLoggedIn && (\r\n                  <>\r\n                    <li>\r\n                      <input type=\"checkbox\" id=\"check\"/>\r\n                      <label for=\"check\" class=\"checkbtn-menu-item\">\r\n                        <i onClick={()=>navigateSignIn()}>Sign In/UP</i>\r\n                      </label>\r\n                    </li>\r\n                  </>\r\n                  )}\r\n\r\n                  <li>\r\n                    <input type=\"checkbox\" id=\"check\"/>\r\n                    <label for=\"check\" class=\"checkbtn-menu-item-home\">\r\n                      <i onClick={()=>navigateHome()}>HOME</i>\r\n                    </label>\r\n                  </li>\r\n\r\n\r\n                  <li>\r\n                    <input type=\"checkbox\" id=\"check\"/>\r\n                    <label for=\"check\" class=\"checkbtn-menu-item\">\r\n                      <i onClick={()=>navigateMembers()}>MEMBERS</i>\r\n                    </label>\r\n                  </li>\r\n\r\n                  {isLoggedIn && (\r\n                  <>\r\n\r\n                    <li>\r\n                      <input type=\"checkbox\" id=\"check\"/>\r\n                      <label for=\"check\" class=\"checkbtn-menu-item\">\r\n                        <i onClick={()=>navigateProfile()}>PROFILE</i>\r\n                      </label>\r\n                    </li>\r\n\r\n                    <li  className=\"navbar-item \">\r\n                      <i onClick={()=>logout()} className=\"all-text  logout-button\" >SIGN OUT</i>\r\n                    </li>\r\n                  </>\r\n                  )}\r\n\r\n\r\n                  <li>\r\n                    <Form inline onSubmit={handleSearch}>\r\n                      <TextField className={classes.input} onChange={({ target }) => setSearch(target.value)} placeholder=\"Search\"/>\r\n                      <Button type=\"submit\" variant=\"outline-success\">Search</Button>\r\n                    </Form>\r\n                  </li>\r\n                 \r\n                 </ul>\r\n      </nav>\r\n   \r\n     \r\n      </div>\r\n    );\r\n\r\n}","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\Footer.js",["177"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Footer.css\"\r\n\r\n\r\nexport default function Footer() {\r\n\r\n    return (\r\n        <div class=\"container-fluid pb-0 mb-0 pt-3 footer-backgroud\">\r\n     <footer>\r\n         <div class=\"row  justify-content-center py-3\">\r\n             <div class=\"col-11\">\r\n                 <div class=\"row \">\r\n                     \r\n                     <div class=\"col-xl-6 col-md-6 col-sm-6 col-12 mx-auto a\">\r\n                         <h3 class=\"text-muted mb-md-0 mb-3 bold-text\">Bookshelf</h3>\r\n                     </div>\r\n\r\n                     <div class=\"col-xl-6 col-md-6 col-sm-6 col-12 mx-auto a mb-3\">\r\n                         <h6 class=\"  text-muted bold-text\"><b>BY JOHN PERKINS</b></h6><small className={\"all-text\"}> johnpatrickperkins@gmail.com</small>\r\n                     </div>\r\n\r\n                     {/* <div class=\"col-xl-2 col-md-4 col-sm-4 col-12\">\r\n                         <h6 class=\"mb-3 mb-lg-4 bold-text \"><b>MENU</b></h6>\r\n                         <ul class=\"list-unstyled\">\r\n                            <li>\r\n                                <Link to=\"/\" className=\"footer-link\">Home</Link>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Link to=\"/members\" className=\"footer-link\">Members</Link>\r\n                            </li>\r\n\r\n                         </ul>\r\n                     </div> */}\r\n\r\n                     {/* <div class=\"col-xl-2 col-md-4 col-sm-4 col-12\">\r\n                        <h6 class=\"mt-55 mt-2 text-muted bold-text\"><b>JOHN PERKINS</b></h6><small> <span><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></span> johnpatrickperkins@gmail.com</small>\r\n                     </div> */}\r\n                 </div>\r\n             </div>\r\n         </div>\r\n     </footer>\r\n </div>\r\n    );\r\n\r\n}","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\Nav2.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\UserDropDown.js",[],["178","179"],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\TabPanel.js",["180"],"import React from 'react';\r\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Box from '@material-ui/core/Box';\r\nimport DisplayBooks from \"./DisplayBooks\"\r\nimport DisplayAllLists from \"./DisplayAllLists\"\r\nimport Following from \"../components/Following\"\r\nimport Reviews from './Reviews';\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nconst AntTabs = withStyles({\r\n  root: {\r\n    borderBottom: '1px solid #e8e8e8',\r\n\r\n  },\r\n  indicator: {\r\n    backgroundColor: '#1890ff',\r\n  },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    margin: \"auto\",\r\n    minWidth: 22,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing(3),\r\n    fontSize: \"13px\",\r\n    color: '#e4e5e6',\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      color: '#40a9ff',\r\n      opacity: 1,\r\n    },\r\n    '&$selected': {\r\n      color: '#1890ff',\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    '&:focus': {\r\n      color: '#40a9ff',\r\n    },\r\n  },\r\n  selected: {},\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width:\"100%\",\r\n  },\r\n  padding: {\r\n    padding: theme.spacing(1),\r\n  },\r\n  demo1: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  demo2: {\r\n    backgroundColor: '#2e1534',\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  function addListNavigate(){    \r\n    history.push(\"/lists/\")\r\n  }\r\n  function MemberNavigate(){    \r\n    history.push(\"/members/\")\r\n  }\r\n\r\n\r\n  function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n         aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n        \r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n  \r\n  function a11yProps(index) {\r\n    return {\r\n      id: `full-width-tab-${index}`,\r\n      'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={classes.root, \"pb-4\"}>\r\n      <div>\r\n        <AntTabs variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          aria-label=\"scrollable auto tabs example\" \r\n          value={value} onChange={handleChange} \r\n\r\n         >\r\n          {/* <AntTab label=\"Profile\" {...a11yProps(0)} /> */}\r\n          <AntTab label=\"Bookshelf\" {...a11yProps(0)}/>\r\n          <AntTab label=\"Read list\" {...a11yProps(1)}/>\r\n          <AntTab label=\"Read\" {...a11yProps(2)}/>\r\n          <AntTab label=\"Favorites\" {...a11yProps(3)} />\r\n          <AntTab label=\"Follow\" {...a11yProps(4)}/>\r\n          <AntTab label=\"Reviews\" {...a11yProps(5)}/>\r\n          <AntTab label=\"Lists\" {...a11yProps(6)}/>\r\n          {/* <AntTab label=\"Reviews\" {...a11yProps(7)}/>\r\n          <AntTab label=\"Dairy\" {...a11yProps(8)}/> */}\r\n        </AntTabs>\r\n        <Typography className={classes.padding} />\r\n        <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n\r\n        {/* <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <div className=\"row book-row\">\r\n            <h1 className=\"all-text\" >Profile</h1>\r\n          </div>\r\n        </TabPanel> */}\r\n\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          <div className=\" center-all\">\r\n            <h4 className=\"all-text profile-title-text\">Let People know what's on your bookshelf!</h4>\r\n          </div>\r\n          <div className=\"row book-row\">\r\n            <DisplayBooks owner={props.owner} books={props.userData.bookshelf} type=\"bookshelf\" userData={props.userData} />\r\n          </div>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          <div className=\" center-all\">\r\n            <h4 className=\"all-text profile-title-text\">What have you always wanted to read?</h4>\r\n          </div>\r\n          <div className=\"row book-row\">\r\n            <DisplayBooks owner={props.owner} books={props.userData.readList} type=\"readingList\" userData={props.userData}/>\r\n          </div>\r\n        </TabPanel>\r\n\r\n\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          <div className=\" center-all\">\r\n            <h4 className=\"all-text profile-title-text\">Share every book you've ever read!</h4>\r\n          </div>\r\n          <div className=\"row book-row\">\r\n            <DisplayBooks owner={props.owner} books={props.userData.books} type=\"read\" userData={props.userData}/>\r\n          </div>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={3} dir={theme.direction}>\r\n          <div className=\" center-all\">\r\n            <h4 className=\"all-text profile-title-text\">Desert island books</h4>\r\n          </div>\r\n\r\n          <div className=\"row book-row\">\r\n            <DisplayBooks owner={props.owner} books={props.userData.favorites} type=\"favorites\" userData={props.userData}/>\r\n          </div>\r\n        </TabPanel>\r\n        \r\n\r\n        <TabPanel value={value} index={4} dir={theme.direction}>\r\n          <div className=\" center-all\">\r\n            <h4 className=\"all-text profile-title-text-list\">Follow other Bookshelf users to get inspiration</h4>\r\n            <div onClick={()=>MemberNavigate()} className=\"search-members-button\">\r\n              <h5 className=\"all-text p-2\">Find Members To Follow</h5>\r\n            </div>\r\n          </div>\r\n          <Following userData={props.userData} owner={props.owner}/>\r\n        </TabPanel>\r\n\r\n        <TabPanel value={value} index={5} dir={theme.direction}>\r\n          <div className=\" center-all\">\r\n            <h4 className=\"all-text profile-title-text\">Everyone's a critic...</h4>\r\n          </div>\r\n          <Reviews userData={props.userData} owner={props.owner}/>\r\n        </TabPanel> \r\n\r\n\r\n        <TabPanel value={value} index={6} dir={theme.direction}>\r\n          <div className=\" center-all\">\r\n            <h4 className=\"all-text profile-title-text-list\">Create lists to share with your friends</h4>\r\n            <div onClick={()=>addListNavigate()} className=\"search-members-button\">\r\n              <h5 className=\"all-text p-2\">Add List</h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"row book-row\">\r\n            <DisplayAllLists lists={props.userData.lists}/>\r\n          </div>\r\n        </TabPanel>\r\n\r\n\r\n        {/* <TabPanel value={value} index={7} dir={theme.direction}>\r\n          Item Five\r\n        </TabPanel> \r\n\r\n    \r\n         <TabPanel value={value} index={8} dir={theme.direction}>\r\n          Diary\r\n        </TabPanel> */}\r\n      </SwipeableViews>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\DisplayLists.js",[],["181","182"],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\SignIn.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\UserSearch.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\Stars.js",["183","184"],"import React, { useState } from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function HalfRating(props) {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Rating name=\"half-rating\" defaultValue={0} precision={0.5} onChange={({ target}) => props.setRating(target.value)}/>     \r\n    </div>\r\n  );\r\n}","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\SignUp.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\DisplayAllLists.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\functions\\showNotification.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\AddButtons\\AddFavoriteButton.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\Following.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\Reviews.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\DisplayBooks.js",["185"],"import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Navbar.css\"\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport showNotification from '../functions/showNotification';\r\n\r\n//Feed me your lists aand i'll show them for you\r\nexport default function DisplayBooks(props) {\r\n\r\n  function handleDeleteBook(_id, listtype){\r\n    let info = {\"book\":_id}\r\n\r\n    if(listtype === \"favorites\"){\r\n      axios.post('/api/users/removefavorite', info)\r\n          //.then(response => (console.log(response.data)))\r\n          .then(res => { showNotification(res.data, res.data)});\r\n    }\r\n\r\n    if(listtype === \"read\"){\r\n      axios.post('/api/users/removebook', info)\r\n          .then(res => { showNotification(res.data, res.data)});\r\n    }\r\n\r\n    if(listtype === \"readingList\"){\r\n      axios.post('/api/users/removereadlist', info)\r\n          .then(res => { showNotification(res.data, res.data)});\r\n    }\r\n\r\n    if(listtype === \"bookshelf\"){\r\n      axios.post('/api/users/removebookshelf', info)\r\n          .then(res => { showNotification(res.data, res.data)});\r\n    }\r\n  }\r\n\r\n\r\n  return (props.books.map(currentBook => {\r\n\r\n    const {title, author, image,  _id} = currentBook\r\n    return (\r\n\r\n\r\n      <section className=\"the-book  d-flex flex-column\" key={_id} >\r\n        <div className=\"link-div mt-auto \">\r\n\r\n            <Link to={\"/book/\"+_id}>\r\n                <img className=\"card-img-top card-img-top-bottom\" src={image} alt={title}></img>\r\n            </Link>\r\n\r\n        </div>\r\n\r\n\r\n      {props.owner &&(\r\n        <div className=\"button\">\r\n          <button onClick={() => handleDeleteBook(_id, props.type)}>Remove</button>\r\n        </div> )}\r\n\r\n\r\n\r\n      </section>\r\n    )\r\n  }))\r\n}","C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\components\\MyTextField.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\functions\\handleAddBookFromBookPage.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\functions\\handleAddBook.js",[],"C:\\Users\\John Perkins\\Documents\\Coding\\Projects\\bookshelf_prod\\bookshelf\\frontend\\src\\idPages\\ViewList.js",["186"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function ViewList(props){\r\n  const [list, setList] = useState({books:[], title:\"\", description:\"\", likes:[], comments:[], author:{photo:\"\", userName:\"\", _id:\"\"}})  \r\n\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/users/getList/'+props.location.pathname.replace(\"/list/\", \"\"))\r\n          //.then(response => (console.log(response.data)))\r\n          .then(response => (setList(response.data)))\r\n  },[])\r\n\r\n\r\n  function DisplayList (){\r\n    return(\r\n      <div className=\"list-row\">\r\n        {list.books.map((book) => (\r\n        <>\r\n          <section className=\"the-book  d-flex flex-column\" key={book._id} >\r\n            <div className=\"link-div mt-auto \">\r\n                <Link to={\"/book/\"+book._id}>\r\n                    <img className=\"card-img-top card-img-top-bottom\" src={book.image} alt={book.title}></img>\r\n                </Link>\r\n            </div>\r\n          </section>\r\n        </>))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"list-container\">\r\n\r\n      <div className=\"ml-2 mt-2\">\r\n        <Link to={\"/user/\"+list.author._id}>\r\n          <p className=\"sub-text\">List by {list.author.userName}</p>\r\n        </Link>\r\n        <h4 className=\"all-text list-title-text\">{list.title}</h4>\r\n        <p className=\"mt-1 sub-text list-description-text\">{list.description}</p>\r\n      </div>\r\n\r\n      <div className=\"book-row\">\r\n        <DisplayList/>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}",{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":15,"column":8,"nodeType":"193","messageId":"194","endLine":15,"endColumn":12},{"ruleId":"191","severity":1,"message":"195","line":3,"column":26,"nodeType":"193","messageId":"194","endLine":3,"endColumn":35},{"ruleId":"191","severity":1,"message":"196","line":14,"column":10,"nodeType":"193","messageId":"194","endLine":14,"endColumn":14},{"ruleId":"191","severity":1,"message":"197","line":16,"column":18,"nodeType":"193","messageId":"194","endLine":16,"endColumn":27},{"ruleId":"191","severity":1,"message":"198","line":14,"column":28,"nodeType":"193","messageId":"194","endLine":14,"endColumn":47},{"ruleId":"191","severity":1,"message":"199","line":15,"column":25,"nodeType":"193","messageId":"194","endLine":15,"endColumn":41},{"ruleId":"200","severity":1,"message":"201","line":62,"column":58,"nodeType":"202","messageId":"203","endLine":62,"endColumn":60},{"ruleId":"200","severity":1,"message":"201","line":89,"column":58,"nodeType":"202","messageId":"203","endLine":89,"endColumn":60},{"ruleId":"204","severity":1,"message":"205","line":185,"column":51,"nodeType":"206","messageId":"207","endLine":185,"endColumn":53},{"ruleId":"191","severity":1,"message":"208","line":17,"column":10,"nodeType":"193","messageId":"194","endLine":17,"endColumn":24},{"ruleId":"209","severity":1,"message":"210","line":56,"column":9,"nodeType":"211","messageId":"207","endLine":56,"endColumn":15},{"ruleId":"212","severity":1,"message":"213","line":145,"column":15,"nodeType":"214","endLine":145,"endColumn":33},{"ruleId":"191","severity":1,"message":"215","line":12,"column":17,"nodeType":"193","messageId":"194","endLine":12,"endColumn":25},{"ruleId":"191","severity":1,"message":"216","line":7,"column":16,"nodeType":"193","messageId":"194","endLine":7,"endColumn":27},{"ruleId":"191","severity":1,"message":"197","line":12,"column":18,"nodeType":"193","messageId":"194","endLine":12,"endColumn":27},{"ruleId":"191","severity":1,"message":"217","line":13,"column":23,"nodeType":"193","messageId":"194","endLine":13,"endColumn":37},{"ruleId":"218","severity":1,"message":"219","line":26,"column":7,"nodeType":"220","endLine":26,"endColumn":9,"suggestions":"221"},{"ruleId":"191","severity":1,"message":"222","line":12,"column":18,"nodeType":"193","messageId":"194","endLine":12,"endColumn":27},{"ruleId":"191","severity":1,"message":"215","line":13,"column":17,"nodeType":"193","messageId":"194","endLine":13,"endColumn":25},{"ruleId":"218","severity":1,"message":"223","line":28,"column":5,"nodeType":"220","endLine":28,"endColumn":23,"suggestions":"224"},{"ruleId":"200","severity":1,"message":"201","line":27,"column":46,"nodeType":"202","messageId":"203","endLine":27,"endColumn":48},{"ruleId":"191","severity":1,"message":"217","line":14,"column":23,"nodeType":"193","messageId":"194","endLine":14,"endColumn":37},{"ruleId":"218","severity":1,"message":"225","line":53,"column":5,"nodeType":"220","endLine":53,"endColumn":7,"suggestions":"226"},{"ruleId":"191","severity":1,"message":"227","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":14},{"ruleId":"191","severity":1,"message":"227","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":14},{"ruleId":"187","replacedBy":"228"},{"ruleId":"189","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":139,"column":33,"nodeType":"232","messageId":"233","endLine":139,"endColumn":34},{"ruleId":"187","replacedBy":"234"},{"ruleId":"189","replacedBy":"235"},{"ruleId":"191","severity":1,"message":"236","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"237","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":14},{"ruleId":"191","severity":1,"message":"238","line":40,"column":19,"nodeType":"193","messageId":"194","endLine":40,"endColumn":25},{"ruleId":"218","severity":1,"message":"223","line":14,"column":5,"nodeType":"220","endLine":14,"endColumn":7,"suggestions":"239"},"no-native-reassign",["240"],"no-negated-in-lhs",["241"],"no-unused-vars","'Nav2' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'book' is assigned a value but never used.","'setapiKey' is assigned a value but never used.","'setFriendsBookshelf' is assigned a value but never used.","'setFriendsLatest' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'secondPassword' is assigned a value but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setOwner' is assigned a value but never used.","'useLocation' is defined but never used.","'setCurrentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'apiKey' and 'props.location.pathname'. Either include them or remove the dependency array.","ArrayExpression",["242"],"'setUpdate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.location.pathname'. Either include it or remove the dependency array.",["243"],"React Hook useEffect has missing dependencies: 'handleSetInfo' and 'props.location.pathname'. Either include them or remove the dependency array.",["244"],"'Link' is defined but never used.",["240"],["241"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["240"],["241"],"'useState' is defined but never used.","'Button' is defined but never used.","'author' is assigned a value but never used.",["245"],"no-global-assign","no-unsafe-negation",{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [apiKey, props.location.pathname]",{"range":"254","text":"255"},"Update the dependencies array to be: [props.location.pathname, update, userData]",{"range":"256","text":"257"},"Update the dependencies array to be: [handleSetInfo, props.location.pathname]",{"range":"258","text":"259"},"Update the dependencies array to be: [props.location.pathname]",{"range":"260","text":"261"},[1077,1079],"[apiKey, props.location.pathname]",[1202,1220],"[props.location.pathname, update, userData]",[1942,1944],"[handleSetInfo, props.location.pathname]",[581,583],"[props.location.pathname]"]